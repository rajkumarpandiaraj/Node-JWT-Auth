                            17.Checking the current User

Checking the user detail and get that user's document from User collection
And displaying the user details in views

In middleware/user.js
    const jwt = require('jsonwebtoken');

const requireAuth = (req, res, next) => {
  const token = req.cookies.jwt;

  // check json web token exists & is verified
  if (token) {
    jwt.verify(token, 'net ninja secret', (err, decodedToken) => {
      if (err) {
        console.log(err.message);
        res.redirect('/login');
      } else {
        console.log(decodedToken);
        next();
      }
    });
  } else {
    res.redirect('/login');
  }
};

// check current user
const checkUser = (req, res, next) => {
  const token = req.cookies.jwt;
  if (token) {
    jwt.verify(token, 'net ninja secret', async (err, decodedToken) => {
      if (err) {
        res.locals.user = null;
        next();
      } else {
        let user = await User.findById(decodedToken.id);//in decodedToken we can access the id payload
        res.locals.user = user; //registering the user document in res.locals to access this in views[eg : res.locals.xyz]
        next();
      }
    });
  } else {
    res.locals.user = null;
    next();
  }
};


module.exports = { requireAuth, checkUser };


In app.js
        const express = require('express');
    const mongoose = require('mongoose');
    const authRoutes = require('./routes/authRoutes');
    const cookieParser = require('cookie-parser');
    const { requireAuth, checkUser } = require('./middleware/authMiddleware');

    const app = express();

    // middleware
    app.use(express.static('public'));
    app.use(express.json());
    app.use(cookieParser());

    // view engine
    app.set('view engine', 'ejs');

    // database connection
    const dbURI = 'mongodb+srv://shaun:test1234@cluster0.del96.mongodb.net/node-auth';
    mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex:true })
      .then((result) => app.listen(3000))
      .catch((err) => console.log(err));

    // routes
    app.get('*', checkUser); //to run that func for every request

    app.get('/', (req, res) => res.render('home'));
    app.get('/smoothies', requireAuth, (req, res) => res.render('smoothies'));
    app.use(authRoutes);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
displaying the user email in views based on the condition

In views/partials./Header.ejs
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <nav>
    <h1><a href="/">Ninja Smoothies</a></h1>
    <ul>
      <% if (user) { %>
        <li>Welcome, <%= user.email %></li>
        <li><a href="/logout">Log out</a></li>
      <% } else { %>
        <li><a href="/login">Log in</a></li>
        <li><a href="/signup" class="btn">Sign up</a></li>
      <% } %>
    </ul>
  </nav>
  
