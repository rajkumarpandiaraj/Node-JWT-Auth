                                2.Auth Routes and controller

GitHub : https://github.com/iamshaunjp/node-express-jwt-auth/tree/lesson-2

Auth Routes we are going to create:
    /signup    --> GET      --> signup page
    /login     --> GET      --> login page
    /signup    --> POST      --> create a new user in db 
    /login     --> POST      --> authenticate a current user
    /logout    --> GET       --> log a user out // handle later tutorial


In Routes/authRoutes.js
    const { Router } = require('express');
    const authController = require('../controllers/authController');

    const router = Router();

    router.get('/signup', authController.signup_get);
    router.post('/signup', authController.signup_post);
    router.get('/login', authController.login_get);
    router.post('/login', authController.login_post);

    module.exports = router;

////////////////////////////////////////////////////////////////////
In controller/authController.js
    // controller actions
    module.exports.signup_get = (req, res) => {
      res.render('signup');
    }

    module.exports.login_get = (req, res) => {
      res.render('login');
    }

    module.exports.signup_post = async (req, res) => {
      res.send('new signup');
    }

    module.exports.login_post = async (req, res) => {
      res.send('user login');
    }
////////////////////////////////////////////////////////////////////
In app.js
    const express = require('express');
    const mongoose = require('mongoose');
    const authRoutes = require('./routes/authRoutes');

    const app = express();

    // middleware
    app.use(express.static('public'));
    app.use(express.json())

    // view engine
    app.set('view engine', 'ejs');

    // database connection
    const dbURI = 'mongodb+srv://shaun:test1234@cluster0.del96.mongodb.net/node-auth';
    mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex:true })
      .then((result) => app.listen(3000))
      .catch((err) => console.log(err));

    // routes
    app.get('/', (req, res) => res.render('home'));
    app.get('/smoothies', (req, res) => res.render('smoothies'));
    app.use(authRoutes);

//////////////////////////////////////////////////////////
In views/login.ejs
    <%- include('partials/header'); -%>

    <h1>Login</h1>

    <%- include('partials/footer'); -%>

/////////////////////////////////////////////////////////////
In view/signU.ejs
    <%- include('partials/header'); -%>

    <h1>Sign Up</h1>

    <%- include('partials/footer'); -%>